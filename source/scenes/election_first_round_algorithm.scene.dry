title: Election First Round
on-arrival: {!
    // National demographics (as percentages):
    // Workers: 48%, Old Middle: 11%, New Middle: 20%, Rural: 18%, Unemployed: 3%
    
    // 1. Define seat profiles with realistic demographic compositions
    var seatProfiles = {
        'rural_stronghold': {
            weights: {
                rural: 65,      // Rural-dominated constituencies
                workers: 20,    // Some industrial workers
                old_middle: 8,  // Traditional elites
                new_middle: 5,  // Few professionals
                unemployed: 2   // Low unemployment
            },
            seats: 108  // 18% of 600 seats (matches rural population %)
        },
        'urban_working': {
            weights: {
                workers: 70,     // Heavy working class
                unemployed: 12,  // Higher unemployment in urban areas
                new_middle: 10,  // Some professionals
                old_middle: 5,   // Few wealthy
                rural: 3         // Minimal rural
            },
            seats: 180  // 30% of 600 seats (major working class areas)
        },
        'suburban_mixed': {
            weights: {
                new_middle: 45,  // Professional class dominant
                old_middle: 25,  // Affluent suburbs
                workers: 22,     // Some workers
                unemployed: 5,   // Low unemployment
                rural: 3         // Minimal rural
            },
            seats: 120  // 20% of 600 seats (new middle class areas)
        },
        'industrial': {
            weights: {
                workers: 60,     // Industrial workers dominant
                unemployed: 8,   // Some unemployment
                new_middle: 15,  // Skilled professionals
                old_middle: 12,  // Management class
                rural: 5         // Some rural outskirts
            },
            seats: 132  // 22% of 600 seats (heavy industry areas)
        },
        'elite_districts': {
            weights: {
                old_middle: 50,  // Wealthy elites
                new_middle: 35,  // High-end professionals
                workers: 10,     // Service workers
                unemployed: 3,   // Very low unemployment
                rural: 2         // Minimal rural
            },
            seats: 60   // 10% of 600 seats (concentrated wealth areas)
        }
    };

    // Verify total seats = 600
    var totalSeats = 0;
    for (var profileName in seatProfiles) {
        totalSeats += seatProfiles[profileName].seats;
    }
    
    // 2. Calculate weighted national demographics to verify balance
    var nationalWeights = {rural: 0, workers: 0, old_middle: 0, new_middle: 0, unemployed: 0};
    
    for (var profileName in seatProfiles) {
        var profile = seatProfiles[profileName];
        var seatProportion = profile.seats / 600;
        
        for (var demo in profile.weights) {
            nationalWeights[demo] += (profile.weights[demo] / 100) * seatProportion * 100;
        }
    }

    // 3. Initialize results
    var results = {};
    for (var i = 0; i < Q.parties.length; i++) {
        var party = Q.parties[i];
        results[party] = 0;
        Q[party + '_seats_first'] = 0;
    }

    var totalFirstRoundWins = 0;

    // 4. Seat allocation per profile
    for (var profileName in seatProfiles) {
        var profile = seatProfiles[profileName];
        var profileResults = {};
        for (var j = 0; j < Q.parties.length; j++) {
            profileResults[Q.parties[j]] = 0;
        }

        for (var j = 0; j < Q.parties.length; j++) {
            var party = Q.parties[j];
            var weightedSupport = 0;

            // Calculate weighted support across demographics
            for (var demo in profile.weights) {
                var classSupport = Q[demo + '_' + party + '_normalized'] || 0;
                weightedSupport += (profile.weights[demo] / 100) * classSupport;
            }

            // Balanced probabilities for moderate first-round wins
            var winProbability;
            if (weightedSupport >= 55) winProbability = 0.85;
            else if (weightedSupport >= 45) winProbability = 0.60;
            else if (weightedSupport >= 35) winProbability = 0.35;
            else if (weightedSupport >= 25) winProbability = 0.15;
            else if (weightedSupport >= 15) winProbability = 0.05;
            else winProbability = 0.001;

            var exactSeats = profile.seats * winProbability;
            var roundedSeats = Math.floor(exactSeats);
            if (Math.random() < (exactSeats - roundedSeats)) roundedSeats += 1;

            profileResults[party] = roundedSeats;
            results[party] += roundedSeats;
            totalFirstRoundWins += roundedSeats;
        }

        // Save per-profile results for debugging
        Q['first_round_profile_' + profileName] = profileResults;
    }

    // 5. Clamp to 600 seats max (safety check)
    if (totalFirstRoundWins > 600) {
        var adjustment = totalFirstRoundWins - 600;
        var largestParty = Q.parties[0];
        for (var j = 1; j < Q.parties.length; j++) {
            if (results[Q.parties[j]] > results[largestParty]) {
                largestParty = Q.parties[j];
            }
        }
        results[largestParty] -= adjustment;
        totalFirstRoundWins = 600;
    }

    // 6. Store final results
    for (var j = 0; j < Q.parties.length; j++) {
        var party = Q.parties[j];
        Q[party + '_seats_first'] = results[party];
    }

    // 7. Store summary statistics
    Q.seats_decided_first_round = totalFirstRoundWins;
    Q.seats_to_second_round = 600 - totalFirstRoundWins;
    
    // 8. Store national demographic verification (for debugging)
    Q.calculated_national_demographics = nationalWeights;
    Q.target_demographics = {
        workers: 48,
        old_middle: 11,
        new_middle: 20,
        rural: 18,
        unemployed: 3
    };
!}
go-to: election_first_round.post_first_round_results